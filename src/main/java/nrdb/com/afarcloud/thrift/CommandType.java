/* Copyright 2018-2021 Universidad Politécnica de Madrid (UPM).
 *
 * Authors:
 *    Sara Lana Serrano
 *    Mario San Emeterio de la Parte
 *    Vicente Hernández Díaz
 *    José-Fernan Martínez Ortega
 *
 * This software is distributed under a dual-license scheme:
 *
 * - For academic uses: Licensed under GNU Affero General Public License as
 *                      published by the Free Software Foundation, either
 *                      version 3 of the License, or (at your option) any
 *                      later version.
 *
 * - For any other use: Licensed under the Apache License, Version 2.0.
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *
 * You can get a copy of the license terms in licenses/LICENSE.
 *
 */
/**

 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.afarcloud.thrift;


import java.util.Map;
import java.util.HashMap;
import org.apache.thrift.TEnum;

public enum CommandType implements org.apache.thrift.TEnum {
  NAV_TAKEOFF(0),
  NAV_LAND(1),
  NAV_WAYPOINT(2),
  CAMERA_IMAGE(3),
  VIDEO_START_CAPTURE(4),
  VIDEO_STOP_CAPTURE(5),
  NAV_HOTPOINT(6),
  NAV_FOLLOW_TARGET(7),
  NAV_TRACK_SUBJECT(8),
  CAMERA_PANORAMA(9),
  NAV_HOME(10);

  private final int value;

  private CommandType(int value) {
    this.value = value;
  }

  /**
   * Get the integer value of this enum value, as defined in the Thrift IDL.
   */
  public int getValue() {
    return value;
  }

  /**
   * Find a the enum type by its integer value, as defined in the Thrift IDL.
   * @return null if the value is not found.
   */
  public static CommandType findByValue(int value) { 
    switch (value) {
      case 0:
        return NAV_TAKEOFF;
      case 1:
        return NAV_LAND;
      case 2:
        return NAV_WAYPOINT;
      case 3:
        return CAMERA_IMAGE;
      case 4:
        return VIDEO_START_CAPTURE;
      case 5:
        return VIDEO_STOP_CAPTURE;
      case 6:
        return NAV_HOTPOINT;
      case 7:
        return NAV_FOLLOW_TARGET;
      case 8:
        return NAV_TRACK_SUBJECT;
      case 9:
        return CAMERA_PANORAMA;
      case 10:
        return NAV_HOME;
      default:
        return null;
    }
  }
}
