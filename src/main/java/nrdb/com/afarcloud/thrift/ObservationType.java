/* Copyright 2018-2021 Universidad Politécnica de Madrid (UPM).
 *
 * Authors:
 *    Sara Lana Serrano
 *    Mario San Emeterio de la Parte
 *    Vicente Hernández Díaz
 *    José-Fernan Martínez Ortega
 *
 * This software is distributed under a dual-license scheme:
 *
 * - For academic uses: Licensed under GNU Affero General Public License as
 *                      published by the Free Software Foundation, either
 *                      version 3 of the License, or (at your option) any
 *                      later version.
 *
 * - For any other use: Licensed under the Apache License, Version 2.0.
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *
 * You can get a copy of the license terms in licenses/LICENSE.
 *
 */

/**

 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.afarcloud.thrift;


import java.util.Map;
import java.util.HashMap;
import org.apache.thrift.TEnum;

public enum ObservationType implements org.apache.thrift.TEnum {
  air_humidity(0),
  air_pressure(1),
  air_temperature(2),
  altitude(3),
  application_rate_mm3_m2(4),
  battery(5),
  battery_level(6),
  crude_protein(7),
  condensedWorkState(8),
  condensed_work_state(9),
  co2(10),
  cow_state1_fraction(11),
  cow_state2_fraction(12),
  cow_state3_fraction(13),
  cow_state4_fraction(14),
  cow_state5_fraction(15),
  cow_state6_fraction(16),
  cow_state7_fraction(17),
  cow_state8_fraction(18),
  dry_matter(19),
  d_value(20),
  electrical_conductivity_bulk(21),
  electrical_conductivity_pores(22),
  engine_percentage_torque(23),
  engine_speed(24),
  engine_total_hours_of_operation(25),
  fuelRatio(26),
  fuel_ratio(27),
  fibre(28),
  irrigation(29),
  latitude(30),
  longitude(31),
  protein(32),
  pmr_in_1d(33),
  pmr_in_2d(34),
  pmr_in_3d(35),
  pmr_in_4d(36),
  pmr_in_5d(37),
  powdery_mildew_risk(38),
  relative_dielectric_constant(39),
  rainfall(40),
  rainfall_gain(41),
  soil_humidity(42),
  soil_matrix_potential(43),
  soil_temperature(44),
  solar_radiation(45),
  speed(46),
  signal_strength(47),
  state_1(48),
  state_2(49),
  state_3(50),
  state_4(51),
  state_5(52),
  state_6(53),
  state_7(54),
  state_8(55),
  state_Cow_eating(56),
  state_Cow_ruminating(57),
  state_Cow_running(58),
  state_Cow_sleeping(59),
  state_Cow_walking(60),
  tractor_state1_fraction(61),
  tractor_state2_fraction(62),
  tractor_state3_fraction(63),
  tractor_state4_fraction(64),
  tractor_state5_fraction(65),
  tractor_state6_fraction(66),
  tractor_state7_fraction(67),
  tractor_state8_fraction(68),
  temperature_teros12(69),
  temperature_teros21(70),
  total_fuel_used(71),
  vehicle_speed(72),
  volumetric_water_content_mineral_soil(73),
  water_consumption(74),
  wind_direction(75),
  wind_gain(76),
  wind_speed(77);

  private final int value;

  private ObservationType(int value) {
    this.value = value;
  }

  /**
   * Get the integer value of this enum value, as defined in the Thrift IDL.
   */
  public int getValue() {
    return value;
  }

  /**
   * Find a the enum type by its integer value, as defined in the Thrift IDL.
   * @return null if the value is not found.
   */
  public static ObservationType findByValue(int value) { 
    switch (value) {
      case 0:
        return air_humidity;
      case 1:
        return air_pressure;
      case 2:
        return air_temperature;
      case 3:
        return altitude;
      case 4:
        return application_rate_mm3_m2;
      case 5:
        return battery;
      case 6:
        return battery_level;
      case 7:
        return crude_protein;
      case 8:
        return condensedWorkState;
      case 9:
        return condensed_work_state;
      case 10:
        return co2;
      case 11:
        return cow_state1_fraction;
      case 12:
        return cow_state2_fraction;
      case 13:
        return cow_state3_fraction;
      case 14:
        return cow_state4_fraction;
      case 15:
        return cow_state5_fraction;
      case 16:
        return cow_state6_fraction;
      case 17:
        return cow_state7_fraction;
      case 18:
        return cow_state8_fraction;
      case 19:
        return dry_matter;
      case 20:
        return d_value;
      case 21:
        return electrical_conductivity_bulk;
      case 22:
        return electrical_conductivity_pores;
      case 23:
        return engine_percentage_torque;
      case 24:
        return engine_speed;
      case 25:
        return engine_total_hours_of_operation;
      case 26:
        return fuelRatio;
      case 27:
        return fuel_ratio;
      case 28:
        return fibre;
      case 29:
        return irrigation;
      case 30:
        return latitude;
      case 31:
        return longitude;
      case 32:
        return protein;
      case 33:
        return pmr_in_1d;
      case 34:
        return pmr_in_2d;
      case 35:
        return pmr_in_3d;
      case 36:
        return pmr_in_4d;
      case 37:
        return pmr_in_5d;
      case 38:
        return powdery_mildew_risk;
      case 39:
        return relative_dielectric_constant;
      case 40:
        return rainfall;
      case 41:
        return rainfall_gain;
      case 42:
        return soil_humidity;
      case 43:
        return soil_matrix_potential;
      case 44:
        return soil_temperature;
      case 45:
        return solar_radiation;
      case 46:
        return speed;
      case 47:
        return signal_strength;
      case 48:
        return state_1;
      case 49:
        return state_2;
      case 50:
        return state_3;
      case 51:
        return state_4;
      case 52:
        return state_5;
      case 53:
        return state_6;
      case 54:
        return state_7;
      case 55:
        return state_8;
      case 56:
        return state_Cow_eating;
      case 57:
        return state_Cow_ruminating;
      case 58:
        return state_Cow_running;
      case 59:
        return state_Cow_sleeping;
      case 60:
        return state_Cow_walking;
      case 61:
        return tractor_state1_fraction;
      case 62:
        return tractor_state2_fraction;
      case 63:
        return tractor_state3_fraction;
      case 64:
        return tractor_state4_fraction;
      case 65:
        return tractor_state5_fraction;
      case 66:
        return tractor_state6_fraction;
      case 67:
        return tractor_state7_fraction;
      case 68:
        return tractor_state8_fraction;
      case 69:
        return temperature_teros12;
      case 70:
        return temperature_teros21;
      case 71:
        return total_fuel_used;
      case 72:
        return vehicle_speed;
      case 73:
        return volumetric_water_content_mineral_soil;
      case 74:
        return water_consumption;
      case 75:
        return wind_direction;
      case 76:
        return wind_gain;
      case 77:
        return wind_speed;
      default:
        return null;
    }
  }
}
