/* Copyright 2018-2021 Universidad Politécnica de Madrid (UPM).
 *
 * Authors:
 *    Sara Lana Serrano
 *    Mario San Emeterio de la Parte
 *    Vicente Hernández Díaz
 *    José-Fernan Martínez Ortega
 *
 * This software is distributed under a dual-license scheme:
 *
 * - For academic uses: Licensed under GNU Affero General Public License as
 *                      published by the Free Software Foundation, either
 *                      version 3 of the License, or (at your option) any
 *                      later version.
 *
 * - For any other use: Licensed under the Apache License, Version 2.0.
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *
 * You can get a copy of the license terms in licenses/LICENSE.
 *
 */

/**

 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.afarcloud.thrift;


import java.util.Map;
import java.util.HashMap;
import org.apache.thrift.TEnum;

public enum SensorType implements org.apache.thrift.TEnum {
  algorithm(0),
  asset_tracking(1),
  air_sensor(2),
  grass(3),
  flow_meter(4),
  soil(5),
  soilSensor(6),
  environmental(7),
  silage(8),
  collar(9),
  weatherStation(10),
  tractor(11),
  gps_tracker(12),
  CAN_data(13),
  ISOBUSgw(14),
  gas(15);

  private final int value;

  private SensorType(int value) {
    this.value = value;
  }

  /**
   * Get the integer value of this enum value, as defined in the Thrift IDL.
   */
  public int getValue() {
    return value;
  }

  /**
   * Find a the enum type by its integer value, as defined in the Thrift IDL.
   * @return null if the value is not found.
   */
  public static SensorType findByValue(int value) { 
    switch (value) {
      case 0:
        return algorithm;
      case 1:
        return asset_tracking;
      case 2:
        return air_sensor;
      case 3:
        return grass;
      case 4:
        return flow_meter;
      case 5:
        return soil;
      case 6:
        return soilSensor;
      case 7:
        return environmental;
      case 8:
        return silage;
      case 9:
        return collar;
      case 10:
        return weatherStation;
      case 11:
        return tractor;
      case 12:
        return gps_tracker;
      case 13:
        return CAN_data;
      case 14:
        return ISOBUSgw;
      case 15:
        return gas;
      default:
        return null;
    }
  }
}
