
# You are reading the ".properties" entry.
! The exclamation mark can also mark text as comments.
# The key characters =, and : should be written with
# a preceding backslash to ensure that they are properly loaded.
# However, there is no need to precede the value characters =, and : by a backslash.

# ######################################
# AFarCloud scenario
# ######################################
afc.scenario = AS12
afc.schemas = Definitions,CollarListSchema,CollarSchema,GatewayListSchema,RegionListSchema,RegionSchema,SensorListSchema_Complete,SensorSchema_Complete,MultiSensorListSchema,StateVectorSchema_global


# ######################################
# InfluxDB repository connection
# ######################################
datasource.influxDB.accessPoint = http://138.100.51.116
datasource.influxDB.port = 9091
datasource.influxDB.username = XXXXXXXXX
datasource.influxDB.password = XXXXXXXXX

# ######################################
# MySQL repository connection
# DBName afarcloud_data_<scenario>	
#		i.e: afarcloud_data_as01 afarcloud_data_as02 .....
# DBName to Test
#		afarcloud_data 
# ######################################
datasource.MySQL.accessPoint = 83.212.240.24
datasource.MySQL.port = 3306
datasource.MySQL.username = XXXXXXXXX
datasource.MySQL.password = XXXXXXXXX

datasource.MySQL.driver = org.gjt.mm.mysql.Driver
datasource.MySQL.DBName = afarcloud_data_as12


# ######################################
# prefix measurements/tables InfluxDB
# ######################################
datastore.prefix.observation = obs_
datastore.prefix.collar = 
datastore.prefix.region = 
datastore.prefix.vehicle = veh_
datastore.prefix.aggregation = aggr_

# ######################################
# Rest Server
# ######################################
rs.response.observations.max = 500
rs.response.observations.max_by_uid = 500
rs.response.proximity.radio.max = 1000


rs.response.select.observation = *::field, entityName, entityName_dev, sequenceNumber, service, service_dev, provider, provider_dev, type, type_dev, uom
rs.response.select.collar = *::field, entityName, sequenceNumber, service, provider, type, resourceAlarm, /Anomaly$/
rs.response.select.vehicle = *::field, vehicleId, sequenceNumber

rs.response.select.region = *::field, entityName, sequenceNumber, service, provider, observedProperty, geo_numPoint, result


# ######################################
# Supervisor
# sintaxis <database>[;<database>}*
# ######################################
sup.datasource.influxDB = AS01;AS02;AS03;AS04;AS05;AS06;AS07;AS08;AS09;AS10;AS11;AS12;AS13


